fill_in_sex <- function(x){
if (x["Sex"] == "") {
rownum <- which(morphometrics$popid == x["popid"])
x["Sex"] <- morphometrics[rownum, "Sex"]
}
x
}
test <- apply(census, 1, fill_in_sex)
census$popid
?which
fill_in_sex <- function(x){
if (x["Sex"] == "") {
if (!is.na[x["popid"]]){
rownum <- which(morphometrics$popid == x["popid"])
x["Sex"] <- morphometrics[rownum, "Sex"]
}
}
x
}
test <- apply(census, 1, fill_in_sex)
fill_in_sex <- function(x){
if (x["Sex"] == "") {
if (!is.na(x["popid"])){
rownum <- which(morphometrics$popid == x["popid"])
x["Sex"] <- morphometrics[rownum, "Sex"]
}
}
x
}
test <- apply(census, 1, fill_in_sex)
unique(census$popid)
View(census)
fill_in_sex <- function(x){
if (x["Sex"] == "") {
if (x["popid"] %in% (morphometrics$popid)){
rownum <- which(morphometrics$popid == x["popid"])
x["Sex"] <- morphometrics[rownum, "Sex"]
}
}
x
}
test <- apply(census, 1, fill_in_sex)
test <- as.data.frame(apply(census, 1, fill_in_sex))
View(test)
test <- as.data.frame(t(apply(census, 1, fill_in_sex)))
View(test)
View(morphometrics)
str(morphometrics)
morphometrics <- read.csv("data/raw/morphometric_data.csv") %>%
mutate(popid = paste0(Population, ID)) %>% # creates unique id
mutate(Sex = as.character(Sex))
# load census
census <- read.csv("data/raw/census_data.csv") %>%
rename(session_day = Date_of_1st_session) %>%
mutate(popid = paste0(Population, ID)) # creates unique id
census[is.na(census$ID), "popid"] <- NA
# fill in sex variable
fill_in_sex <- function(x){
if (x["Sex"] == "") {
if (x["popid"] %in% (morphometrics$popid)){
rownum <- which(morphometrics$popid == x["popid"])
x["Sex"] <- morphometrics[rownum, "Sex"]
}
}
x
}
test <- as.data.frame(t(apply(census, 1, fill_in_sex)))
View(test)
str(test)
View(test)
str(census)
census <- as.data.frame(t(apply(census, 1, fill_in_sex)))
View(census)
# load mating and add treatment factor
mating <- read.csv("data/raw/mating_data.csv", stringsAsFactors = FALSE, na.strings = "") %>%
mutate(sex_ratio = as.factor(ifelse(Population == "A" | Population == "E" | Population == "G", 0.5,
ifelse(Population == "B" | Population == "F" | Population == "H", 0.75, 0.25)))) %>%
rename(session_day = Day_of_1st_session)
# transform all variable names to lowercase
out <- lapply(list(census, mating, morphometrics), function(x){
names(x) <- tolower(names(x))
x
})
# reassign to dataframes
census <- out[[1]]
mating <- out[[2]]
morphometrics <- out[[3]]
str(mating)
# transform variables to factor
mating <- mating %>% mutate(population = as.factor(population))
mating_over_time <- mating %>%
group_by(sex_ratio, session_day, population) %>%
summarise(matings = sum(mating, na.rm = TRUE))
means <- aggregate(matings ~ sex_ratio, mating_over_time, mean)
library(ggplot2)
d <- ggplot(mating_over_time, aes(x = sex_ratio, y = matings))
d + geom_boxplot() + geom_jitter() +
stat_summary(fun.y=mean, colour="red", geom="point",
shape=18, size=5)
# geom_text(data = means, aes(label = matings, y = matings - 0.5))
library(ggplot2)
d <- ggplot(mating_over_time, aes(session_day, matings, colour = sex_ratio)) +
stat_summary(fun.y = "sum", size = 1.5, geom = "line")
# census data
# census <- census %>% mutate(session_day = as.factor(session_day))
census_summary <- census %>%
filter(is.na(immigrant) | is.na(pre_census)) %>%
group_by(session_day, population) %>%
summarise(num_ind = length(id)) %>%
filter(!(is.na(session_day)))
d <- ggplot(census_summary, aes(session_day, num_ind, colour = population)) +
geom_point() +
geom_line()
d
d <- ggplot(census_summary, aes(session_day, num_ind, colour = population)) +
geom_point() +
stat_summary(fun.y = "sum", size = 1.5, geom = "line")
d
census_summary <- census %>%
filter(is.na(immigrant) | is.na(pre_census)) %>%
group_by(session_day, population) %>%
summarise(num_ind = length(id)) %>%
filter(!(is.na(session_day))) %>%
mutate(session_day = as.numeric(as.character(session_day)))
census %>%
mutate(session_day = as.numeric(as.character(session_day))) %>%
filter(is.na(immigrant) | is.na(pre_census)) %>%
group_by(session_day, population) %>%
summarise(num_ind = length(id)) %>%
filter(!(is.na(session_day)))
census_summary <- census %>%
mutate(session_day = as.numeric(as.character(session_day))) %>%
filter(is.na(immigrant) | is.na(pre_census)) %>%
group_by(session_day, population) %>%
summarise(num_ind = length(id)) %>%
filter(!(is.na(session_day)))
d <- ggplot(census_summary, aes(session_day, num_ind, colour = population)) +
geom_point() +
stat_summary(fun.y = "sum", size = 1.5, geom = "line")
d
ggplot(census_summary, aes(session_day, num_ind, colour = population)) +
geom_point() +
stat_summary(fun.y = "sum", size = 1.5, geom = "line") +
facet_wrap(~ sex)
census_summary <- census %>%
mutate(session_day = as.numeric(as.character(session_day))) %>%
filter(is.na(immigrant) | is.na(pre_census)) %>%
group_by(session_day, population, sex) %>%
summarise(num_ind = length(id)) %>%
filter(!(is.na(session_day)))
d <- ggplot(census_summary, aes(session_day, num_ind, colour = population)) +
geom_point() +
stat_summary(fun.y = "sum", size = 1.5, geom = "line") +
facet_wrap(~ sex)
d <- ggplot(census_summary, aes(session_day, num_ind, colour = population)) +
geom_point() +
stat_summary(fun.y = "sum", size = 1.5, geom = "line") +
facet_wrap(~ sex)
d
census_summary <- census %>%
mutate(session_day = as.numeric(as.character(session_day))) %>%
filter(is.na(immigrant) | is.na(pre_census)) %>%
group_by(session_day, population, sex) %>%
summarise(num_ind = length(id)) %>%
filter(!(is.na(session_day))) %>%
filter(sex == "F" | sex == "M")
d <- ggplot(census_summary, aes(session_day, num_ind, colour = population)) +
geom_point() +
stat_summary(fun.y = "sum", size = 1.5, geom = "line") +
facet_wrap(~ sex)
d
library(dplyr)
# morphometrics data
morphometrics <- read.csv("data/raw/morphometric_data.csv") %>%
mutate(popid = paste0(Population, ID)) %>% # creates unique id
mutate(Sex = as.character(Sex))
# load census
census <- read.csv("data/raw/census_data.csv") %>%
rename(session_day = Date_of_1st_session) %>%
mutate(popid = paste0(Population, ID)) %>%
mutate(sex_ratio = as.factor(ifelse(Population == "A" | Population == "E" | Population == "G", 0.5,
ifelse(Population == "B" | Population == "F" | Population == "H", 0.75, 0.25))))# creates unique id
census[is.na(census$ID), "popid"] <- NA
# fill in sex variable
fill_in_sex <- function(x){
if (x["Sex"] == "") {
if (x["popid"] %in% (morphometrics$popid)){
rownum <- which(morphometrics$popid == x["popid"])
x["Sex"] <- morphometrics[rownum, "Sex"]
}
}
x
}
census <- as.data.frame(t(apply(census, 1, fill_in_sex)))
# load mating and add treatment factor
mating <- read.csv("data/raw/mating_data.csv", stringsAsFactors = FALSE, na.strings = "") %>%
mutate(sex_ratio = as.factor(ifelse(Population == "A" | Population == "E" | Population == "G", 0.5,
ifelse(Population == "B" | Population == "F" | Population == "H", 0.75, 0.25)))) %>%
rename(session_day = Day_of_1st_session)
# transform all variable names to lowercase
out <- lapply(list(census, mating, morphometrics), function(x){
names(x) <- tolower(names(x))
x
})
# reassign to dataframes
census <- out[[1]]
mating <- out[[2]]
morphometrics <- out[[3]]
str(mating)
# transform variables to factor
mating <- mating %>% mutate(population = as.factor(population))
mating_over_time <- mating %>%
group_by(sex_ratio, session_day, population) %>%
summarise(matings = sum(mating, na.rm = TRUE))
means <- aggregate(matings ~ sex_ratio, mating_over_time, mean)
census_summary <- census %>%
mutate(session_day = as.numeric(as.character(session_day))) %>%
filter(is.na(immigrant) | is.na(pre_census)) %>%
group_by(session_day, sex_ratio, sex) %>%
summarise(num_ind = length(id)) %>%
filter(!(is.na(session_day))) %>%
filter(sex == "F" | sex == "M")
d <- ggplot(census_summary, aes(session_day, num_ind, colour = sex_ratio)) +
geom_point() +
stat_summary(fun.y = "sum", size = 1.5, geom = "line") +
facet_wrap(~ sex)
d
sum(morphometrics$sex == F & morphometrics$treatment == 0.25)
View(morphometrics)
sum(morphometrics$sex == F)
sum(morphometrics$sex == "F" )
sum(morphometrics$sex == "F" & morphometrics$treatment == 0.25)
str(morphometrics)
str(census_summary)
census_summary <- census %>%
mutate(session_day = as.numeric(as.character(session_day))) %>%
filter(is.na(immigrant) | is.na(pre_census)) %>%
group_by(session_day, sex_ratio, sex) %>%
summarise(num_ind = length(id)) %>%
filter(!(is.na(session_day))) %>%
filter(sex == "F" | sex == "M") %>%
mutate(num_ind == as.numeric(as.character(num_ind)))
str(census_summary)
census_summary <- census %>%
mutate(session_day = as.numeric(as.character(session_day))) %>%
filter(is.na(immigrant) | is.na(pre_census)) %>%
group_by(session_day, sex_ratio, sex) %>%
summarise(num_ind = length(id)) %>%
filter(!(is.na(session_day))) %>%
filter(sex == "F" | sex == "M") %>%
mutate(num_ind == as.numeric(as.character(sex_ratio)))
d <- ggplot(census_summary, aes(session_day, num_ind, colour = sex_ratio)) +
geom_point() +
stat_summary(fun.y = "sum", size = 1.5, geom = "line") +
facet_wrap(~ sex)
d
census_summary$rel_num_ind <- NA
census_summary$rel_num_ind <- NA
for (sex in c("M", "F")) {
for (i in c(0.25, 0.5, 0.75)) {
full_num_ind <- sum(morphometrics$sex == sex & morphometrics$treatment == i)
census_summary[census_summary$sex_ratio == i & census_summary$sex == sex, rel_num_ind] <-
census_summary[census_summary$sex_ratio == i & census_summary$sex == sex, num_ind] / full_num_ind
}
}
census_summary$rel_num_ind <- NA
for (sex in c("M", "F")) {
for (i in c(0.25, 0.5, 0.75)) {
full_num_ind <- sum(morphometrics$sex == sex & morphometrics$treatment == i)
census_summary[census_summary$sex_ratio == i & census_summary$sex == sex, "rel_num_ind"] <-
census_summary[census_summary$sex_ratio == i & census_summary$sex == sex, "num_ind"] / full_num_ind
}
}
d <- ggplot(census_summary, aes(session_day, re_num_ind, colour = sex_ratio)) +
geom_point() +
stat_summary(fun.y = "sum", size = 1.5, geom = "line") +
facet_wrap(~ sex)
d
d <- ggplot(census_summary, aes(session_day, rel_num_ind, colour = sex_ratio)) +
geom_point() +
stat_summary(fun.y = "sum", size = 1.5, geom = "line") +
facet_wrap(~ sex)
d
# morphometrics data
morphometrics <- read.csv("data/raw/morphometric_data.csv") %>%
mutate(popid = paste0(Population, ID)) %>% # creates unique id
mutate(Sex = as.character(Sex))
# load census
census <- read.csv("data/raw/census_data.csv") %>%
rename(session_day = Date_of_1st_session) %>%
mutate(popid = paste0(Population, ID)) %>%
mutate(sex_ratio = as.factor(ifelse(Population == "A" | Population == "E" | Population == "G", 0.5,
ifelse(Population == "B" | Population == "F" | Population == "H", 0.75, 0.25))))# creates unique id
census[is.na(census$ID), "popid"] <- NA
# fill in sex variable
fill_in_sex <- function(x){
if (x["Sex"] == "") {
if (x["popid"] %in% (morphometrics$popid)){
rownum <- which(morphometrics$popid == x["popid"])
x["Sex"] <- morphometrics[rownum, "Sex"]
}
}
x
}
census <- as.data.frame(t(apply(census, 1, fill_in_sex)))
# load mating and add treatment factor
mating <- read.csv("data/raw/mating_data.csv", stringsAsFactors = FALSE, na.strings = "") %>%
mutate(sex_ratio = as.factor(ifelse(Population == "A" | Population == "E" | Population == "G", 0.5,
ifelse(Population == "B" | Population == "F" | Population == "H", 0.75, 0.25)))) %>%
rename(session_day = Day_of_1st_session)
out <- lapply(list(census, mating, morphometrics), function(x){
names(x) <- tolower(names(x))
x
})
# reassign to dataframes
census <- out[[1]]
mating <- out[[2]]
morphometrics <- out[[3]]
str(mating)
# transform variables to factor
mating <- mating %>% mutate(population = as.factor(population))
mating_over_time <- mating %>%
group_by(sex_ratio, session_day, population) %>%
summarise(matings = sum(mating, na.rm = TRUE))
means <- aggregate(matings ~ sex_ratio, mating_over_time, mean)
library(ggplot2)
d <- ggplot(mating_over_time, aes(x = sex_ratio, y = matings))
d + geom_boxplot() + geom_jitter() +
stat_summary(fun.y=mean, colour="red", geom="point",
shape=18, size=5)
# geom_text(data = means, aes(label = matings, y = matings - 0.5))
library(ggplot2)
d <- ggplot(mating_over_time, aes(session_day, matings, colour = sex_ratio)) +
stat_summary(fun.y = "sum", size = 1.5, geom = "line")
# census data
# census <- census %>% mutate(session_day = as.factor(session_day))
census_summary <- census %>%
mutate(session_day = as.numeric(as.character(session_day))) %>%
filter(is.na(immigrant) | is.na(pre_census)) %>%
group_by(session_day, sex_ratio, sex) %>%
summarise(num_ind = length(id)) %>%
filter(!(is.na(session_day))) %>%
filter(sex == "F" | sex == "M") %>%
mutate(num_ind == as.numeric(as.character(sex_ratio)))
# absolute sex-specific dispersal
d <- ggplot(census_summary, aes(session_day, num_ind, colour = sex_ratio)) +
geom_point() +
stat_summary(fun.y = "sum", size = 1.5, geom = "line") +
facet_wrap(~ sex)
d
library(ggplot2)
d <- ggplot(mating_over_time, aes(session_day, matings, colour = sex_ratio)) +
stat_summary(fun.y = "sum", size = 1.5, geom = "line")
d
library(ggplot2)
d <- ggplot(mating_over_time, aes(x = sex_ratio, y = matings))
d + geom_boxplot() + geom_jitter() +
stat_summary(fun.y=mean, colour="red", geom="point",
shape=18, size=5)
library(ggplot2)
d <- ggplot(mating_over_time, aes(x = sex_ratio, y = matings))
d + geom_boxplot() + geom_jitter() +
stat_summary(fun.y=mean, colour="red", geom="point",
shape=18, size=5) +
theme_minimal()
library(ggplot2)
d <- ggplot(mating_over_time, aes(x = sex_ratio, y = matings))
d + geom_boxplot() + geom_jitter() +
stat_summary(fun.y=mean, colour="red", geom="point",
shape=18, size=5) +
theme_classic()
library(ggthemes)
?ggthemes
library(ggthemes)
library(ggplot2)
d <- ggplot(mating_over_time, aes(x = sex_ratio, y = matings))
d + geom_boxplot() + geom_jitter() +
stat_summary(fun.y=mean, colour="red", geom="point",
shape=18, size=5) +
theme_bw()
# geom_text(data = means, aes(label = matings, y = matings - 0.5))
library(ggplot2)
d <- ggplot(mating_over_time, aes(x = sex_ratio, y = matings))
d + geom_boxplot() + geom_jitter() +
stat_summary(fun.y=mean, colour="red", geom="point",
shape=18, size=5) +
theme_minimal()
# geom_text(data = means, aes(label = matings, y = matings - 0.5))
library(ggplot2)
d <- ggplot(mating_over_time, aes(session_day, matings, colour = sex_ratio)) +
stat_summary(fun.y = "sum", size = 1.5, geom = "line")
d
ggplot(mating_over_time, aes(session_day, matings, colour = sex_ratio)) +
stat_summary(fun.y = "sum", size = 1.5, geom = "line") +
geom_point() +
theme_minimal()
ggplot(mating_over_time, aes(session_day, matings, colour = sex_ratio)) +
geom_point() +
stat_summary(fun.y = "sum", size = 1.5, geom = "line") +
theme_minimal()
ggplot(mating_over_time, aes(session_day, matings, colour = sex_ratio)) +
stat_summary(fun.y = "sum", size = 1.5, geom = "line") +
theme_minimal()
ggplot(mating_over_time, aes(session_day, matings, colour = sex_ratio)) +
stat_summary(fun.y = "sum", size = 1.5, geom = "point") +
theme_minimal()
ggplot(mating_over_time, aes(session_day, matings, colour = sex_ratio)) +
stat_summary(fun.y = "sum", size = 1.2, geom = "line") +
theme_minimal()
census %>%
mutate(session_day = as.numeric(as.character(session_day))) %>%
filter(is.na(immigrant) | is.na(pre_census)) %>%
group_by(session_day, sex_ratio, sex) %>%
summarise(num_ind = length(id)) %>%
filter(!(is.na(session_day))) %>%
filter(sex == "F" | sex == "M") %>%
mutate(num_ind == as.numeric(as.character(sex_ratio)))
# absolute sex-specific dispersal
d <- ggplot(census_summary, aes(session_day, num_ind, colour = sex_ratio)) +
geom_point() +
stat_summary(fun.y = "sum", size = 1.5, geom = "line") +
facet_wrap(~ sex)
d
d <- ggplot(census_summary, aes(session_day, num_ind, colour = sex_ratio)) +
geom_point() +
stat_summary(fun.y = "sum", size = 1.5, geom = "line") +
facet_wrap(~ sex) +
+ theme_minimal()
d
d <- ggplot(census_summary, aes(session_day, num_ind, colour = sex_ratio)) +
geom_point() +
stat_summary(fun.y = "sum", size = 1.5, geom = "line") +
facet_wrap(~ sex) +
theme_minimal()
d
census_summary$rel_num_ind <- NA
for (sex in c("M", "F")) {
for (i in c(0.25, 0.5, 0.75)) {
full_num_ind <- sum(morphometrics$sex == sex & morphometrics$treatment == i)
census_summary[census_summary$sex_ratio == i & census_summary$sex == sex, "rel_num_ind"] <-
census_summary[census_summary$sex_ratio == i & census_summary$sex == sex, "num_ind"] / full_num_ind
}
}
d <- ggplot(census_summary, aes(session_day, rel_num_ind, colour = sex_ratio)) +
geom_point() +
stat_summary(fun.y = "sum", size = 1.5, geom = "line") +
facet_wrap(~ sex) +
theme_minimal()
d
library(dplyr)
# morphometrics data
morphometrics <- read.csv("data/raw/morphometric_data.csv") %>%
mutate(popid = paste0(Population, ID)) %>% # creates unique id
mutate(Sex = as.character(Sex))
# load census
census <- read.csv("data/raw/census_data.csv") %>%
rename(session_day = Date_of_1st_session) %>%
mutate(popid = paste0(Population, ID)) %>%
mutate(sex_ratio = as.factor(ifelse(Population == "A" | Population == "E" | Population == "G", 0.5,
ifelse(Population == "B" | Population == "F" | Population == "H", 0.75, 0.25))))# creates unique id
census[is.na(census$ID), "popid"] <- NA
# fill in sex variable
fill_in_sex <- function(x){
if (x["Sex"] == "") {
if (x["popid"] %in% (morphometrics$popid)){
rownum <- which(morphometrics$popid == x["popid"])
x["Sex"] <- morphometrics[rownum, "Sex"]
}
}
x
}
census <- as.data.frame(t(apply(census, 1, fill_in_sex)))
# load mating and add treatment factor
mating <- read.csv("data/raw/mating_data.csv", stringsAsFactors = FALSE, na.strings = "") %>%
mutate(sex_ratio = as.factor(ifelse(Population == "A" | Population == "E" | Population == "G", 0.5,
ifelse(Population == "B" | Population == "F" | Population == "H", 0.75, 0.25)))) %>%
rename(session_day = Day_of_1st_session)
# transform all variable names to lowercase
out <- lapply(list(census, mating, morphometrics), function(x){
names(x) <- tolower(names(x))
x
})
# reassign to dataframes
census <- out[[1]]
mating <- out[[2]]
morphometrics <- out[[3]]
# transform variables to factor
mating <- mating %>% mutate(population = as.factor(population))
mating_over_time <- mating %>%
group_by(sex_ratio, session_day, population) %>%
summarise(matings = sum(mating, na.rm = TRUE))
means <- aggregate(matings ~ sex_ratio, mating_over_time, mean)
library(ggthemes)
library(ggplot2)
d <- ggplot(mating_over_time, aes(x = sex_ratio, y = matings))
d + geom_boxplot() + geom_jitter() +
stat_summary(fun.y=mean, colour="red", geom="point",
shape=18, size=5) +
theme_minimal()
# geom_text(data = means, aes(label = matings, y = matings - 0.5))
d
d <- ggplot(mating_over_time, aes(x = sex_ratio, y = matings))
d + geom_boxplot() + geom_jitter() +
stat_summary(fun.y=mean, colour="red", geom="point",
shape=18, size=5) +
theme_minimal()
# geom_text(data = means, aes(label = matings, y = matings - 0.5))
library(ggplot2)
d <- ggplot(mating_over_time, aes(session_day, matings, colour = sex_ratio)) +
stat_summary(fun.y = "sum", size = 1.2, geom = "line") +
theme_minimal()
d
